@use "sass:color";
@import "pt-colours";
@import "pt-lib-styling";
@import "pt-lib-transitions";

@mixin button-base() {
    border-radius: 4px;
	padding: 8px;
    font-size: 16px;
    line-height: 16px;
	font-weight: 600;
	text-decoration: none;

    label {
        color: inherit;
        display: inline-block;
    }
    svg {
        path {
            fill: currentColor;
        }
    }
    &.flex {
        display: inline-flex;
        align-items: center;
    }
    &.default-size {
        height: 36px;
        svg {
            width: 24px;
            height: 24px;
        }
        &.icon {
            padding: 5px;
            label {
                padding: 2px;
            }
        }
    }
    *:hover {
        cursor: pointer;
    }
    &:disabled {
        box-shadow: none;
        background: rgba(236,239,241,1);
        border-color: rgba(176,190,197,1);
        
        color: rgba(176,190,197,1);
        cursor: no-drop;
    }
}

@mixin button-state-hover($background, $border) {
    &:hover:not(:disabled) {
        cursor: pointer;
        background: $background;
        border-color: $border;
        box-shadow: 0 2px 8px -1px rgba(0, 0, 0, 0.7);

        @include auto-text-colour($background);
    }
}
@mixin button-state-focus($border) {
    &:focus {
        outline: 2px solid orange;
        outline-offset: 1px;
    }
}

@mixin button-state-disabled {

}

@mixin button($color-theme, $color-background, $color-text-hover) {
    @include button-base();

    $color-dark: color.adjust($color-theme, $lightness: -5%);
    $color-light: color.adjust($color-theme, $lightness: +10%);
    $text-color: color.lightness($color-theme);

    $color-20: mix($color-theme, white, 20%);

	border: 1px solid $color-dark;

    @include gradient($color-theme, $color-light);
    @include auto-text-colour($color-theme);

    box-shadow: 0 2px 6px -3px black;
    @include transition-background();
    
    //&:hover:not(:disabled),
    //&:focus:not(:disabled) {
    //    cursor: pointer;
    //    background: $color-background;
    //    color: $color-text-hover;
    //}
    @include button-state-hover($color-background, $color-theme);
    @include button-state-focus($color-theme);

    &:active:not(:disabled) {
        box-shadow: 0 2px 8px -3px rgba(0, 0, 0, 0.7);
        background: $color-background;
        color: $color-text-hover;
    }
}

@mixin button-dark($color) {
    @include button($color);

    box-shadow: 0 2px 8px -1px rgba(255, 255, 255, 0.2);
}

@mixin flat-button-auto($color) {
    $color-light: rgba($color, 0.2);
    @include flat-button($color, $color-light);
}

@mixin flat-button($color, $hover) {
    @include button-base();

    $text-color: color.lightness($color);

	border: 2px solid $color;
	background: none;
	
    color: $color;
	
    box-shadow: none;
    
    &:hover:not(:disabled),
    &:focus:not(:disabled) {
        cursor: pointer;
        background: $hover;
        box-shadow: 0 2px 8px -1px rgba(0, 0, 0, 0.7);
    }
    @include button-state-hover($color, $hover);
    @include button-state-focus($color);

    &:active:not(:disabled) {
        box-shadow: 0 2px 8px -3px rgba(0, 0, 0, 0.7);
        background: $hover;
    }
}

@mixin clear-button($color, $hover) {
    @include button-base();

    $text-color: color.lightness($color);

    border: 1px solid #bbb;
    box-shadow: 0 0 4px -1px rgba(0, 0, 0, 0.7);
    background: rgba(white, 0.3);
    background: white;
    background: linear-gradient(0deg, #e5e5e5 35%, white 100%);

    @include transition-background();

    color: $color;

    &:hover:not(:disabled) {
        cursor: pointer;
        background: $hover;
        box-shadow: 0 0 8px -2px black;
    }
    //@include button-state-hover($hover, $color);
    @include button-state-focus($color);

    &:active:not(:disabled) {
        box-shadow: none;
        background: $hover;
    }
}

